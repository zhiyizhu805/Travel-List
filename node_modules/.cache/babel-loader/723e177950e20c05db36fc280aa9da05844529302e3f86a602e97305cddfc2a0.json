{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyizhu/Documents/web/Javascript/react/ultimate-react-course-main/05-travel-list/travel-list/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n//1. create form element\n//  - inside the form,use Array.from({length:},callBackFunctionInMapFunction)\n//2. listening for the submit event that happens on the form use onSubmit={}\n//  - the event will happen as soon as we click the button or hit enter while\n//    we are in the input element\n\nimport { useState } from \"react\";\n\n//controlled elements\n//explain    -> by default,input fields maintain their own state inside the DOM,\n//              inside the HTML element itself.This makes it hard to read the values.\n//what we do -> in react ,we usually like to keep all the state in one central place\n//              inside the react application,not inside the DOM\n//              in order to do that ,we use a technique call controlled elements\n//              with this technique,it's react who controls and owns the state of these\n//              input fields not DOM.\n//              - form data changes over time, we need to use state to maintain our\n//                application in sync with it.\n//1.define a state\n//2.use the state on the element we want to control\n//  basically force the element to always take the value of the state variable\n//  then update the state variable with using the onChange handler\n//  - add listener onChange to input field\n//3.set inputValue to stateValue  value={stateValue}\n\n//  keep state and DOM in sync! so we can manipulate the state use setter function\n//  to also manipulate the DOM.\n//  each time the input value change,use setter function to update the changed value\n//  to stateValue:setterFunction(e.target.value).Which will then re-render this view\n//  and then the new state value will get placed there as the value\n//  - we always both need the value and the change in the input tag\n\n//life up state - move state to the closest common parent component\n//whenever multiple sibling components need access to the same state.\n//We move that piece of state to the first common parent component.\n//background:\n//inside Form component,we define a state(and setter function) to allow us use setter\n//function to add items to the state.But we never use/render the state itself inside\n//the Form component.We need to use/render the state in the Packinglist component\n//which is a sibling component to Form component.So we lift the state up to their closest\n//common component -> App\n//steps:\n//1.lift state that will need to be accessed by multiple child sibling components.\n//2.pass the state into the child component(PackingList) as props  so that list can be\n//  rendered according to the state passed in\n//3.in order to enable the child component(Form) to update the state,we need to lift up\n//  the handleAddItems function(which contains the setter function()),then pass the\n//  handleAddItems function as a prop to the Form component.In this way ,we can update\n//  state inside Form(child) component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  id: 1,\n  description: \"Passports\",\n  quantity: 2,\n  packed: false\n}, {\n  id: 2,\n  description: \"Socks\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 3,\n  description: \"charger\",\n  quantity: 12,\n  packed: true\n}, {\n  id: 4,\n  description: \"tooth brush\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 5,\n  description: \"wallet\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 6,\n  description: \"passport\",\n  quantity: 12,\n  packed: true\n}];\nexport default function App() {\n  _s();\n  const [items, setItems] = useState([]);\n  function handleAddItems(item) {\n    //adding new items to the state\n    setItems(items => [...items, item]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAddItem: handleAddItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PackingList, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nfunction Logo() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"\\uD83C\\uDFDD Far Away \\uD83E\\uDDF3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n//when submit event is triggered ,react will call the handleSubmit\n//function.It will along pass into the function ,the event object\n//the event object - an object with all the information about the\n//current event\n_c2 = Logo;\nfunction Form({\n  handleAddItems\n}) {\n  _s2();\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  // const [items, setItems] = useState([]);\n\n  // function handleAddItems(item) {\n  //   //React is all about immutability\n  //   //CAN NOT mutate array when use setter function in state.\n  //   //Just create a new array containing the original and newly added part\n  //   // ❌setItems((items)=>items.push(item))\n\n  //   //adding new items to the state\n  //   setItems((items) => [...items, item]);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!description) return;\n    const newItem = {\n      description,\n      quantity,\n      packed: false,\n      id: new Date()\n    };\n    setQuantity(1);\n    setDescription(\"\");\n    handleAddItems(newItem);\n    // initialItems.push(newItem);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What do you need for your trip \\uD83D\\uDE0D ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: quantity,\n      onChange: e => {\n        setQuantity(e.target.value);\n      },\n      children: Array.from({\n        length: 20\n      }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: num,\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Item...\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n      // console.log(e.target.value);\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s2(Form, \"N0tyIIElQ4BYmJ0Mle1ZnU9F/l4=\");\n_c3 = Form;\nfunction PackingList({\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_c4 = PackingList;\nfunction Item({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: item.packed ? {\n        textDecoration: \"line-through\"\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), \" \", item.quantity, \" \", item.description, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Item;\nfunction Stats() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"stats\",\n    children: \"\\uD83D\\uDCBC You have X items in your list, and you already packed X(X%).\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Stats;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"PackingList\");\n$RefreshReg$(_c5, \"Item\");\n$RefreshReg$(_c6, \"Stats\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","initialItems","id","description","quantity","packed","App","_s","items","setItems","handleAddItems","item","children","Logo","fileName","_jsxFileName","lineNumber","columnNumber","Form","onAddItem","PackingList","Stats","_c","_c2","_s2","setDescription","setQuantity","handleSubmit","e","preventDefault","newItem","Date","className","onSubmit","value","onChange","target","Array","from","length","_","i","map","num","type","placeholder","_c3","Item","_c4","style","textDecoration","_c5","_c6","$RefreshReg$"],"sources":["/Users/zhiyizhu/Documents/web/Javascript/react/ultimate-react-course-main/05-travel-list/travel-list/src/App.js"],"sourcesContent":["//1. create form element\n//  - inside the form,use Array.from({length:},callBackFunctionInMapFunction)\n//2. listening for the submit event that happens on the form use onSubmit={}\n//  - the event will happen as soon as we click the button or hit enter while\n//    we are in the input element\n\nimport { useState } from \"react\";\n\n//controlled elements\n//explain    -> by default,input fields maintain their own state inside the DOM,\n//              inside the HTML element itself.This makes it hard to read the values.\n//what we do -> in react ,we usually like to keep all the state in one central place\n//              inside the react application,not inside the DOM\n//              in order to do that ,we use a technique call controlled elements\n//              with this technique,it's react who controls and owns the state of these\n//              input fields not DOM.\n//              - form data changes over time, we need to use state to maintain our\n//                application in sync with it.\n//1.define a state\n//2.use the state on the element we want to control\n//  basically force the element to always take the value of the state variable\n//  then update the state variable with using the onChange handler\n//  - add listener onChange to input field\n//3.set inputValue to stateValue  value={stateValue}\n\n//  keep state and DOM in sync! so we can manipulate the state use setter function\n//  to also manipulate the DOM.\n//  each time the input value change,use setter function to update the changed value\n//  to stateValue:setterFunction(e.target.value).Which will then re-render this view\n//  and then the new state value will get placed there as the value\n//  - we always both need the value and the change in the input tag\n\n//life up state - move state to the closest common parent component\n//whenever multiple sibling components need access to the same state.\n//We move that piece of state to the first common parent component.\n//background:\n//inside Form component,we define a state(and setter function) to allow us use setter\n//function to add items to the state.But we never use/render the state itself inside\n//the Form component.We need to use/render the state in the Packinglist component\n//which is a sibling component to Form component.So we lift the state up to their closest\n//common component -> App\n//steps:\n//1.lift state that will need to be accessed by multiple child sibling components.\n//2.pass the state into the child component(PackingList) as props  so that list can be\n//  rendered according to the state passed in\n//3.in order to enable the child component(Form) to update the state,we need to lift up\n//  the handleAddItems function(which contains the setter function()),then pass the\n//  handleAddItems function as a prop to the Form component.In this way ,we can update\n//  state inside Form(child) component\n\nconst initialItems = [\n  { id: 1, description: \"Passports\", quantity: 2, packed: false },\n  { id: 2, description: \"Socks\", quantity: 12, packed: false },\n  { id: 3, description: \"charger\", quantity: 12, packed: true },\n  { id: 4, description: \"tooth brush\", quantity: 12, packed: false },\n  { id: 5, description: \"wallet\", quantity: 12, packed: false },\n  { id: 6, description: \"passport\", quantity: 12, packed: true },\n];\nexport default function App() {\n  const [items, setItems] = useState([]);\n  function handleAddItems(item) {\n    //adding new items to the state\n    setItems((items) => [...items, item]);\n  }\n  return (\n    <div>\n      <Logo />\n\n      <Form onAddItem={handleAddItems} />\n      <PackingList items={items} />\n      <Stats />\n    </div>\n  );\n}\nfunction Logo() {\n  return <h1>🏝 Far Away 🧳</h1>;\n}\n\n//when submit event is triggered ,react will call the handleSubmit\n//function.It will along pass into the function ,the event object\n//the event object - an object with all the information about the\n//current event\n\nfunction Form({ handleAddItems }) {\n  const [description, setDescription] = useState(\"\");\n  const [quantity, setQuantity] = useState(1);\n  // const [items, setItems] = useState([]);\n\n  // function handleAddItems(item) {\n  //   //React is all about immutability\n  //   //CAN NOT mutate array when use setter function in state.\n  //   //Just create a new array containing the original and newly added part\n  //   // ❌setItems((items)=>items.push(item))\n\n  //   //adding new items to the state\n  //   setItems((items) => [...items, item]);\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!description) return;\n    const newItem = { description, quantity, packed: false, id: new Date() };\n    setQuantity(1);\n    setDescription(\"\");\n    handleAddItems(newItem);\n    // initialItems.push(newItem);\n  }\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmit}>\n      <h3>What do you need for your trip 😍 ?</h3>\n      <select\n        value={quantity}\n        onChange={(e) => {\n          setQuantity(e.target.value);\n        }}\n      >\n        {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (\n          <option value={num}>{num}</option>\n        ))}\n      </select>\n      <input\n        type=\"text\"\n        placeholder=\"Item...\"\n        value={description}\n        onChange={\n          (e) => setDescription(e.target.value)\n          // console.log(e.target.value);\n        }\n      ></input>\n      <button>Add</button>\n    </form>\n  );\n}\n\nfunction PackingList({ items }) {\n  return (\n    <div className=\"list\">\n      <ul>\n        {items.map((item) => (\n          <Item item={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\nfunction Item({ item }) {\n  return (\n    <li className=\"list\">\n      <span style={item.packed ? { textDecoration: \"line-through\" } : {}}>\n        <input type=\"checkbox\" /> {item.quantity} {item.description}\n        <button>❌</button>\n      </span>\n    </li>\n  );\n}\nfunction Stats() {\n  return (\n    <footer className=\"stats\">\n      💼 You have X items in your list, and you already packed X(X%).\n    </footer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}