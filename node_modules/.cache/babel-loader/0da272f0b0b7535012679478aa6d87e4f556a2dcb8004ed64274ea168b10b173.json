{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyizhu/Documents/web/Javascript/react/ultimate-react-course-main/05-travel-list/travel-list/src/App.js\",\n  _s = $RefreshSig$();\n//1. create form element\n//  - inside the form,use Array.from({length:},callBackFunctionInMapFunction)\n//2. listening for the submit event that happens on the form use onSubmit={}\n//  - the event will happen as soon as we click the button or hit enter while\n//    we are in the input element\n\nimport { useState } from \"react\";\n\n//controlled elements\n//explain    -> by default,input fields maintain their own state inside the DOM,\n//              inside the HTML element itself.This makes it hard to read the values.\n//what we do -> in react ,we usually like to keep all the state in one central place\n//              inside the react application,not inside the DOM\n//              in order to do that ,we use a technique call controlled elements\n//              with this technique,it's react who controls and owns the state of these\n//              input fields not DOM.\n//              - form data changes over time, we need to use state to maintain our\n//                application in sync with it.\n//1.create state\n//2.set inputValue to stateValue   :value={description}\n//3.add listener onChange to input field\n//4.each time the input value change,use setter function to update the changed value\n//  to stateValue:setterFunction(e.target.value).Which will then re-render this view\n//  and then the new state value will get placed there as the value\n//  - we always both need the value and the change in the input tag\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialItems = [{\n  id: 1,\n  description: \"Passports\",\n  quantity: 2,\n  packed: false\n}, {\n  id: 2,\n  description: \"Socks\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 3,\n  description: \"charger\",\n  quantity: 12,\n  packed: true\n}, {\n  id: 4,\n  description: \"tooth brush\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 5,\n  description: \"wallet\",\n  quantity: 12,\n  packed: false\n}, {\n  id: 6,\n  description: \"passport\",\n  quantity: 12,\n  packed: true\n}];\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PackingList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction Logo() {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"\\uD83C\\uDFDD Far Away \\uD83E\\uDDF3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n\n//when submit event is triggered ,react will call the handleSubmit\n//function.It will along pass into the function ,the event object\n//the event object - an object with all the information about the\n//current event\n_c2 = Logo;\nfunction handleSubmit(e) {\n  e.preventDefault();\n}\nfunction Form() {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  const [select, setSelect] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"What do you need for your trip \\uD83D\\uDE0D ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: Array.from({\n        length: 20\n      }, (_, i) => i + 1).map(num => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: select,\n        children: \"i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Item...\",\n      value: description,\n      onChange: e => setDescription(() => e.target.value\n      // console.log(e.target.value);\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"+KSJL/30gbvKdEWeSFgDNAIxWTY=\");\n_c3 = Form;\nfunction PackingList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: initialItems.map(item => /*#__PURE__*/_jsxDEV(Item, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c4 = PackingList;\nfunction Item({\n  item\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      style: item.packed ? {\n        textDecoration: \"line-through\"\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), \" \", item.quantity, \" \", item.description, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Item;\nfunction Stats() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"stats\",\n    children: \"\\uD83D\\uDCBC You have X items in your list, and you already packed X(X%).\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Stats;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"PackingList\");\n$RefreshReg$(_c5, \"Item\");\n$RefreshReg$(_c6, \"Stats\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","initialItems","id","description","quantity","packed","App","children","Logo","fileName","_jsxFileName","lineNumber","columnNumber","Form","PackingList","Stats","_c","_c2","handleSubmit","e","preventDefault","_s","setDescription","select","setSelect","className","onSubmit","Array","from","length","_","i","map","num","value","type","placeholder","onChange","target","_c3","item","Item","_c4","style","textDecoration","_c5","_c6","$RefreshReg$"],"sources":["/Users/zhiyizhu/Documents/web/Javascript/react/ultimate-react-course-main/05-travel-list/travel-list/src/App.js"],"sourcesContent":["//1. create form element\n//  - inside the form,use Array.from({length:},callBackFunctionInMapFunction)\n//2. listening for the submit event that happens on the form use onSubmit={}\n//  - the event will happen as soon as we click the button or hit enter while\n//    we are in the input element\n\nimport { useState } from \"react\";\n\n//controlled elements\n//explain    -> by default,input fields maintain their own state inside the DOM,\n//              inside the HTML element itself.This makes it hard to read the values.\n//what we do -> in react ,we usually like to keep all the state in one central place\n//              inside the react application,not inside the DOM\n//              in order to do that ,we use a technique call controlled elements\n//              with this technique,it's react who controls and owns the state of these\n//              input fields not DOM.\n//              - form data changes over time, we need to use state to maintain our\n//                application in sync with it.\n//1.create state\n//2.set inputValue to stateValue   :value={description}\n//3.add listener onChange to input field\n//4.each time the input value change,use setter function to update the changed value\n//  to stateValue:setterFunction(e.target.value).Which will then re-render this view\n//  and then the new state value will get placed there as the value\n//  - we always both need the value and the change in the input tag\n\nconst initialItems = [\n  { id: 1, description: \"Passports\", quantity: 2, packed: false },\n  { id: 2, description: \"Socks\", quantity: 12, packed: false },\n  { id: 3, description: \"charger\", quantity: 12, packed: true },\n  { id: 4, description: \"tooth brush\", quantity: 12, packed: false },\n  { id: 5, description: \"wallet\", quantity: 12, packed: false },\n  { id: 6, description: \"passport\", quantity: 12, packed: true },\n];\nexport default function App() {\n  return (\n    <div>\n      <Logo />\n      <Form />\n      <PackingList />\n      <Stats />\n    </div>\n  );\n}\nfunction Logo() {\n  return <h1>üèù Far Away üß≥</h1>;\n}\n\n//when submit event is triggered ,react will call the handleSubmit\n//function.It will along pass into the function ,the event object\n//the event object - an object with all the information about the\n//current event\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n}\nfunction Form() {\n  const [description, setDescription] = useState(\"\");\n  const [select, setSelect] = useState(\"\");\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmit}>\n      <h3>What do you need for your trip üòç ?</h3>\n      <select>\n        {Array.from({ length: 20 }, (_, i) => i + 1).map((num) => (\n          <option value={select}>i</option>\n        ))}\n      </select>\n      <input\n        type=\"text\"\n        placeholder=\"Item...\"\n        value={description}\n        onChange={(e) =>\n          setDescription(\n            () => e.target.value\n            // console.log(e.target.value);\n          )\n        }\n      ></input>\n      <button>Add</button>\n    </form>\n  );\n}\nfunction PackingList() {\n  return (\n    <div className=\"list\">\n      <ul>\n        {initialItems.map((item) => (\n          <Item item={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n}\nfunction Item({ item }) {\n  return (\n    <li className=\"list\">\n      <span style={item.packed ? { textDecoration: \"line-through\" } : {}}>\n        <input type=\"checkbox\" /> {item.quantity} {item.description}\n        <button>‚ùå</button>\n      </span>\n    </li>\n  );\n}\nfunction Stats() {\n  return (\n    <footer className=\"stats\">\n      üíº You have X items in your list, and you already packed X(X%).\n    </footer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}